{"version":3,"sources":["views/RegisterView.js"],"names":["RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","onSubmit","autoComplete","type","onChange","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"sOAoGMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAErB,OACE,gCACE,oBAAIW,UAAU,sBAAd,+BAEA,uBACEA,UAAU,qBACVC,SAAUF,KAAKL,aACfQ,aAAa,MAHf,UAKE,wBAAOF,UAAU,4BAAjB,kBAEE,uBACEA,UAAU,4BACVG,KAAK,OACLhB,KAAK,OACLK,MAAOL,EACPiB,SAAUL,KAAKT,kBAInB,wBAAOU,UAAU,4BAAjB,mBAEE,uBACEA,UAAU,4BACVG,KAAK,QACLhB,KAAK,QACLK,MAAOJ,EACPgB,SAAUL,KAAKT,kBAInB,wBAAOU,UAAU,4BAAjB,sBAEE,uBACEA,UAAU,4BACVG,KAAK,WACLhB,KAAK,WACLK,MAAOH,EACPe,SAAUL,KAAKT,kBAInB,wBAAQU,UAAU,uBAAuBG,KAAK,SAA9C,gC,GAhEiBE,aAyErBC,EAAqB,CACzBR,WAAYS,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkCxB,I","file":"static/js/6.52db2fcb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\n\r\nimport './RegisterView.css';\r\n\r\n// export default function RegisterView() {\r\n//   const [name, setName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   useEffect(() => {\r\n//     dispatch(authOperations.register());\r\n//   }, [dispatch]);\r\n\r\n//   const handleChange = ({ target: { name, value } }) => {\r\n//     switch (name) {\r\n//       case 'name':\r\n//         setName(value);\r\n//         break;\r\n\r\n//       case 'email':\r\n//         setEmail(value);\r\n//         break;\r\n\r\n//       case 'password':\r\n//         setPassword(value);\r\n//         break;\r\n\r\n//       default:\r\n//         return;\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = event => {\r\n//     event.preventDefault();\r\n\r\n//     // onSubmit({ name, email, password });\r\n\r\n//     reset();\r\n//   };\r\n\r\n//   const reset = () => {\r\n//     setName('');\r\n//     setEmail('');\r\n//     setPassword('');\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 className=\"registerView__title\">Registration Page</h1>\r\n\r\n//       <form\r\n//         className=\"registerView__form\"\r\n//         onSubmit={handleSubmit}\r\n//         autoComplete=\"off\"\r\n//       >\r\n//         <label className=\"registerView__form__label\">\r\n//           Name:\r\n//           <input\r\n//             className=\"registerView__form__input\"\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             value={name}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </label>\r\n\r\n//         <label className=\"registerView__form__label\">\r\n//           Email:\r\n//           <input\r\n//             className=\"registerView__form__input\"\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             value={email}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </label>\r\n\r\n//         <label className=\"registerView__form__label\">\r\n//           Password:\r\n//           <input\r\n//             className=\"registerView__form__input\"\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             value={password}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </label>\r\n\r\n//         <button className=\"registerView__button\" type=\"submit\">\r\n//           Register\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"registerView__title\">Registration Page</h1>\r\n\r\n        <form\r\n          className=\"registerView__form\"\r\n          onSubmit={this.handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <label className=\"registerView__form__label\">\r\n            Name:\r\n            <input\r\n              className=\"registerView__form__input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className=\"registerView__form__label\">\r\n            Email:\r\n            <input\r\n              className=\"registerView__form__input\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className=\"registerView__form__label\">\r\n            Password:\r\n            <input\r\n              className=\"registerView__form__input\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button className=\"registerView__button\" type=\"submit\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n"],"sourceRoot":""}